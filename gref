#!/bin/bash
# Author : sungyong2010@gmail.com
# Date : xx-08-2008
# Script Name : gref
#               gref is script to use find + grep + git blame combination.

# exclude example 
# find . -path ./misc -prune -o -name '*.txt' -print

##=============================================================================================
## Color Define
## ---------------------------------------------------------------------------
	red='\e[0;31m';     RED='\e[1;31m';     green='\e[0;32m';       GREEN='\e[1;32m';
	yellow='\e[0;33m';  YELLOW='\e[1;33m';  blue='\e[0;34m';        BLUE='\e[1;34m';
	cyan='\e[0;36m';    CYAN='\e[1;36m';
	NCOL='\e[0m';
	export red RED green GREEN yellow YELLOW blue BLUE cyan CYAN NCOL    
## Stress Define
## ---------------------------------------------------------------------------
	BOLD='\033[1m'; NBOLD='\033[0m'
	ULINE='\033[4m'; NULINE='\033[0m'
	HL='\e[42m'; NHL='\e[m'
## ---------------------------------------------------------------------------

#Error Msg
function EMSG()
{
	echo -e ${RED}"$1"${NCOL}
	echo "To be continue, press any key....."
	read
}

function DMSG()                                                                                         
{
	#DEBUG=true
	if [ "${DEBUG}" = "true" ];then
		echo -e ${RED}"$1"${NCOL}
	echo "To be continue, press any key....."
		read    
	fi  
}

function option_parse()
{
	DMSG "parse_option"
	KEYWORD="$1"
	if [ $# = 1 ];then
	   DIR=.
	else
	   DIR="$2"
	   FILE="$3"
	fi

	for arg in "$@"
	do
		case "$arg" in
		"-who")
			WHO=true;
			DMSG "who=true"
			;;
		"--help")help;;
		"-help")help;;
		esac
	done
	DMSG "DIR = $DIR"
	DMSG "FILE = $FILE"
	DMSG "WHO = $WHO"
}

function help()
{
	echo "USAGE: gref pattern"
	echo "USAGE: gref pattern <path>"
	echo "USAGE: gref pattern <path> <file>"
	echo "USAGE: gref pattern -who"
    exit 1
}

function search_iname()
{
	DMSG "search_iname"
	find $DIR -iname "$FILE" -exec grep -l "$KEYWORD" {} \; \
	   -exec grep -n "$KEYWORD" {} \; \
	   -exec echo " " \;	
}

function search_general()
{
	DMSG "search_general"
	if [ "$WHO" = "true" ];then
		lists=`find . -type f -exec grep -l "$KEYWORD" {} \;`
		for found_file in $lists
		do 
			echo $found_file
			echo "`git blame -c --date=short $found_file | grep $KEYWORD`"
			echo " "
		done
	else
		find $DIR -type f -exec grep -l "$KEYWORD" {} \; \
		   -exec grep -n "$KEYWORD" {} \; \
		   -exec echo " " \;
	fi
}

function main()
{
	option_parse "$@"
	if [ -n "$FILE" ];then
		search_iname 
	else
		search_general
	fi
}

main "$@"
